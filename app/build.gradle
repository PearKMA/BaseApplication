plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

//def localProperties = new Properties()
//localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion Versions.compileSdk

    defaultConfig {
        applicationId "com.hunglv.baseapplication"
        minSdkVersion Versions.minSdk
        targetSdk Versions.targetSdk
        versionCode 1
        versionName AppDetail.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
//            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            // #1: resValue("string", "google_maps_key", localProperties['apiKey']) -> access: R.string.google_maps_key
            // #2: buildConfigField("String", "API_KEY", "\"" + localProperties['apiKey'] + "\"") -> access: BuildConfig.API_KEY
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
//        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        // Enable Coroutines
        freeCompilerArgs += Args.coroutines
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "ChargingAnimation_${variant.buildType.name}_${defaultConfig.versionName}.apk"
        }
    }
}

dependencies {
    kapt Deps.roomKapt
    kapt Deps.glideKapt
    kapt Deps.hiltKapt
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlin_version" add if Collections, Ranges, Math, Regex, File extensions, Locks, etc not found
    implementation Deps.coreKtx
    implementation Deps.appcompat
    implementation Deps.material
    implementation Deps.constraintlayout
    implementation Deps.sdp
    implementation Deps.ssp
    implementation Deps.fragmentKtx
    implementation Deps.livedata
    implementation Deps.viewmodel
    implementation Deps.navigationFragment
    implementation Deps.navigationUi
    implementation Deps.recyclerview
    implementation Deps.roomRuntime
    implementation Deps.roomKtx
    implementation Deps.viewpager2
    implementation Deps.coroutines
    implementation Deps.coroutinesCore
    implementation Deps.hilt
    implementation Deps.glide

    implementation project(':baselibrary')
}

kapt {
    correctErrorTypes true
}